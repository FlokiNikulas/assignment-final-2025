on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  unit-tests:
    name: 🧪 Unit & UI Tests
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🧹 Run Lint
        run: npm run lint

      - name: 💅 Run Prettier
        run: npm run format:check

      - name: 🔬 Run Unit & UI Tests
        run: npm run test

      - name: 📈 Generate Coverage Report
        run: npm run coverage

      - name: ⬆️ Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  e2e-tests:
    name: 🔁 E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🌐 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧬 Set Up Environment & DB
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          cat .env
          export $(cat .env | xargs)
          npx prisma migrate deploy

      - name: 🧹 Reset DB Before Tests
        run: npm run prisma:reset

      - name: 🛠️ Build Next.js App
        run: npm run build

      - name: 🚀 Start Next.js Server
        run: |
          nohup npm run start -- -p 3000 > nextjs.log 2>&1 &
          sleep 5
        env:
          NODE_ENV: production
          PORT: 3000

      - name: 🪵 Debug: Output Logs on Failure
        if: failure()
        run: cat nextjs.log

      - name: ⏱️ Wait for Next.js to be Ready
        run: |
          echo "Waiting for Next.js to start..."
          for i in {1..60}; do
            STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:3000 || echo "000")
            if [[ "$STATUS_CODE" == "200" ]]; then
              echo "Next.js is up!"
              break
            fi
            echo "Still waiting... ($i)"
            sleep 2
          done
        timeout-minutes: 3

      - name: 🧪 Run E2E Tests
        run: npm run test:e2e

      - name: ⬆️ Upload Playwright Results (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: test-results/

  preview-deploy:
    name: 🚧 Preview Deployment (Vercel)
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: github.ref != 'refs/heads/main'
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install & Build
        run: |
          npm install
          npm run build

      - name: 🚀 Deploy to Vercel (Preview)
        run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --confirm --scope ${{ secrets.VERCEL_ORG_ID }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  production-deploy:
    name: 🚀 Production Deployment (Vercel)
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install & Build
        run: |
          npm install
          npm run build

      - name: 🚀 Deploy to Vercel (Prod)
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}